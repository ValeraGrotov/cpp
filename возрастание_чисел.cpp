#include <vector>
#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "rus");
   
    int command; // это для того, чтобы читать, что вводит пользователь

    int counter = 1; // это счетчик, можно писать без него. Он нужен там, где мы выводим Введите Такое-то число. Такое-то это счетчик чисел, каждый раз он увеличивается на 1. counter++ это значит увелчить на один (называтся операция инкрементирования). Можно просто написать counter = counter + 1. Это то же самое

    vector<int> numbers; // Собственно говоря, наш массив, куда мы будем записывать числа, которые ввел пользователь

    int otvet = 1; // если пользователь ввел все правильно и числа возрастают, то ставим 1. По умолчанию ставим 1

    while (true) { // начинаем цикл

        printf("Введите %i число: ", counter); // выводим строку с счетчиком
        counter++;                             // увеличиваем счетчик на 1 каждый раз, когда пользователь ввел еще одно число


        scanf_s("%i", &command); // читать в вектор нельзя, поэтому читаем в обычную перменную int command, которую мы создали специально для этого

        if (command == 0) { // если пользователь ввел 0, то выходим из цикла и больше не просим вводить другие числа
            break;
        } else { // иначе добавим введенное число в наш массив numbers и продолжим цикл дальше
            numbers.push_back(command);
        }
    }

    // когда он ввел 0, мы вышли из верхнего цикла и теперь надо проверить, возрастают ли числа
    // суть в том, что нам нужно пройтись по каждому числу в нашем массиве, для этого нам понадобится функция .size()
    // массив.size() вернет сколько элементов в массиве (то есть сколько чисел ввел пользователь)
    // но нужно помнить, что в массивах нумерация начинает с 0, а не с 1
    // например, если юзер ввел 3 числа, то .size() вернет 3, но у нас они будут как
    // numbers[0], numbers[1], numbers[2] - последний элемент 2, а не 3. Это иногда путает

    // начинаем новый цикл, чтобы проверить числа
    // int i = 0 - это наш элемент массива, помним, что они начинаются с нуля, а не с 1
    // i < number.size() - повторяем цикл, пока i меньше, чем количество чисел (то есть проходим по всему массиву)
    // i++  - после каждого раза увеличиваем i на 1, чтобы потом перейти к следующему числу
    //
    for (int i = 0; i < numbers.size(); i++) {
        // Обрати внимание, что тут 2 цикла.
        // Этот, основной цикл начинается с 0 и проходит по всем числам массива
        // А второй цикла, внутри этого, начинается, с int j = i; то есть во втором цикле мы проходим только по тем числам, которые идут после нашего числа.
        
        
        // условие такое, что каждое число должно быть меньше, чем следующее
        // само число это numbers[i]
        // а следующие за ним числа, это numbers[j]
        // если само число больше следующего, то числа не возрастают

        for (int j = i; j < numbers.size(); j++) {

            
            // если само число больше следующего, то ставим otvet = 0
            if (numbers[i] > numbers[j]) {
                otvet = 0;
            }
        }
    }
    
    if (otvet == 1) {
        printf("\nОтвет: Все верно, числа возрастают\n");
    } else {
        printf("\nОтвет: Неверно, числа не возрастают\n");        
    }

    return 0;
}
